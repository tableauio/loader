package main

import (
	"fmt"

	"google.golang.org/protobuf/compiler/protogen"
)

func generateFileHeader(gen *protogen.Plugin, file *protogen.File, g *protogen.GeneratedFile) {
	generateCommonHeader(gen, g)
	if file.Proto.GetOptions().GetDeprecated() {
		g.P("// ", file.Desc.Path(), " is a deprecated file.")
	} else {
		g.P("// source: ", file.Desc.Path())
	}
}

func generateCommonHeader(gen *protogen.Plugin, g *protogen.GeneratedFile) {
	g.P("// Code generated by protoc-gen-go-tableau-loader. DO NOT EDIT.")
	g.P("// versions:")
	g.P("// - protoc-gen-go-tableau-loader v", version)
	g.P("// - protoc                       ", protocVersion(gen))
}

func protocVersion(gen *protogen.Plugin) string {
	v := gen.Request.GetCompilerVersion()
	if v == nil {
		return "(unknown)"
	}
	var suffix string
	if s := v.GetSuffix(); s != "" {
		suffix = "-" + s
	}
	return fmt.Sprintf("v%d.%d.%d%s", v.GetMajor(), v.GetMinor(), v.GetPatch(), suffix)
}
