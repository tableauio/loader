syntax = "proto3";

package protoconf;

import "tableau/protobuf/tableau.proto";
import "google/protobuf/timestamp.proto";
import "common_conf.proto";

option go_package = "github.com/tableauio/loader/test/go-tableau-loader/protoconf";
option (tableau.workbook) = {
  name: "Test.xlsx"
};

message ActivityConf {
  option (tableau.worksheet) = {
    name: "Activity"
    ordered_map: true
    index: "ActivityName"
    index: "ChapterID"
    index: "ChapterName<AwardID>@NamedChapter"
    index: "SectionItemID@Award"
  };

  map<uint64, Activity> activity_map = 1 [(tableau.field) = { key: "ActivityID" layout: LAYOUT_VERTICAL }];
  message Activity {
    uint64 activity_id = 1 [(tableau.field) = { name: "ActivityID" }];
    string activity_name = 2 [(tableau.field) = { name: "ActivityName" }];
    map<uint32, Chapter> chapter_map = 3 [(tableau.field) = { key: "ChapterID" layout: LAYOUT_VERTICAL }];
    message Chapter {
      uint32 chapter_id = 1 [(tableau.field) = {
        name: "ChapterID"
        prop: { refer: "ChapterConf.ID" }
      }];
      string chapter_name = 2 [(tableau.field) = { name: "ChapterName" }];
      uint32 award_id = 3 [(tableau.field) = {
        name: "AwardID"
        prop: { refer: "ItemConf.ID" }
      }];
      map<uint32, Section> section_map = 4 [(tableau.field) = { key: "SectionID" layout: LAYOUT_VERTICAL }];
      //   message Section {
      //     uint32 section_id = 1 [(tableau.field) = { name: "SectionID" }];
      //     string section_name = 2 [(tableau.field) = { name: "SectionName" }];
      //     repeated Item section_item_list = 3 [(tableau.field) = { name: "SectionItem" layout: LAYOUT_HORIZONTAL }];
      //     message Item {
      //       int32 id = 1 [(tableau.field) = { name: "ID" }];
      //       int32 num = 2 [(tableau.field) = { name: "Num" }];
      //     }
      //   }
    }
  }
  map<uint32, Item> bonus_map = 2 [(tableau.field) = { name: "Bonus" key: "ID" layout: LAYOUT_HORIZONTAL }];
  string theme_name = 3 [(tableau.field) = {
    name: "ThemName"
    prop: { refer: "ThemeConf.Name" }
  }];
  int32 cost_item_id = 4 [(tableau.field) = {
    name: "CostItemID"
    prop: { refer: "ItemConf.ID" }
  }];
}

message Section {
  uint32 section_id = 1 [(tableau.field) = { name: "SectionID" }];
  string section_name = 2 [(tableau.field) = { name: "SectionName" }];
  repeated SectionItem section_item_list = 3 [(tableau.field) = { name: "SectionItem" layout: LAYOUT_HORIZONTAL }];
  message SectionItem {
    uint32 id = 1 [(tableau.field) = { name: "ID" }];
    int32 num = 2 [(tableau.field) = { name: "Num" }];
    repeated protoconf.Item decompose_item_list = 3 [
      (tableau.field) = { name: "DecomposeItem" layout: LAYOUT_HORIZONTAL }
    ];  // do not generate for-range loops for index at this level
  }
  map<uint32, int32> section_rank_map = 4 [(tableau.field) = { layout: LAYOUT_VERTICAL }];
}

message ChapterConf {
  option (tableau.worksheet) = {
    name: "ChapterConf"
  };
  map<uint64, Chapter> chapter_map = 1 [(tableau.field) = { key: "ID" layout: LAYOUT_VERTICAL }];
  message Chapter {
    uint64 id = 1 [(tableau.field) = { name: "ID" }];
    string name = 2 [(tableau.field) = { name: "Name" }];
  }
}

message ThemeConf {
  option (tableau.worksheet) = {
    name: "ThemeConf"
  };
  map<string, Theme> theme_map = 1 [(tableau.field) = { key: "Name" layout: LAYOUT_VERTICAL }];
  message Theme {
    string name = 2 [(tableau.field) = { name: "Name" }];
    uint64 value = 1 [(tableau.field) = { name: "Value" }];
    map<string, string> param_map = 3 [(tableau.field) = { key: "Param" layout: LAYOUT_INCELL }];
  }
}

message TaskConf {
  option (tableau.worksheet) = {
    name: "TaskConf"
    index: "ActivityID<Goal,ID>"
    ordered_index: "Goal<ID>"
    ordered_index: "Expiry@TaskExpiry"
  };

  map<int64, Task> task_map = 1 [(tableau.field) = { key: "ID" layout: LAYOUT_VERTICAL }];
  message Task {
    int64 id = 1 [(tableau.field) = { name: "ID" }];
    int64 activity_id = 2 [(tableau.field) = { name: "ActivityID" }];
    int64 goal = 3 [(tableau.field) = { name: "Goal" }];
    protoconf.Item reward = 4 [(tableau.field) = { name: "Reward" }];
    google.protobuf.Timestamp expiry = 5 [(tableau.field) = { name: "Expiry" }];
  }
}