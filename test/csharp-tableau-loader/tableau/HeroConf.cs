// Code generated by protoc-gen-csharp-tableau-loader. DO NOT EDIT.
// versions:
// - protoc-gen-csharp-tableau-loader v0.1.0
// - protoc                           v3.19.3
// source: hero_conf.proto
using System;
using System.Collections.Generic;
using Google.Protobuf;
using Google.Protobuf.Collections;

namespace Tableau
{
    public class HeroConf : Messager, IMessagerName
    {
        // OrderedMap types.
        public class Hero_Attr_OrderedMap : SortedDictionary<string, Protoconf.HeroConf.Types.Hero.Types.Attr> { }

        public class Hero_OrderedMapValue : Tuple<Hero_Attr_OrderedMap, Protoconf.HeroConf.Types.Hero?>
        {
            public Hero_OrderedMapValue(Hero_Attr_OrderedMap item1, Protoconf.HeroConf.Types.Hero? item2) : base(item1, item2) { }
        }
        public class Hero_OrderedMap : SortedDictionary<string, Hero_OrderedMapValue> { }

        private Hero_OrderedMap OrderedMap = new Hero_OrderedMap();

        private Protoconf.HeroConf Data_ = new Protoconf.HeroConf();

        public static string Name() => Protoconf.HeroConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, in LoadOptions? options = null)
        {
            var start = DateTime.Now;
            bool loaded = LoadMessageByPath<Protoconf.HeroConf>(out var msg, dir, fmt, options);
            Data_ = msg;
            bool ok = loaded ? ProcessAfterLoad() : false;
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.HeroConf Data() => ref Data_;

        protected override bool ProcessAfterLoad()
        {
            // OrderedMap init.
            OrderedMap.Clear();
            foreach (var (key1, value1) in Data_.HeroMap)
            {
                var ordered_map1 = new Hero_Attr_OrderedMap();
                foreach (var (key2, value2) in value1.AttrMap)
                {
                    ordered_map1[key2] = value2;
                }
                OrderedMap[key1] = new Hero_OrderedMapValue(ordered_map1, value1);
            }
            return true;
        }

        public Protoconf.HeroConf.Types.Hero? Get1(string name) => Data_.HeroMap?.TryGetValue(name, out var val) == true ? val : null;

        public Protoconf.HeroConf.Types.Hero.Types.Attr? Get2(string name, string title) => Get1(name)?.AttrMap?.TryGetValue(title, out var val) == true ? val : null;

        // OrderedMap accessors.
        public ref readonly Hero_OrderedMap GetOrderedMap() => ref OrderedMap;

        public Hero_Attr_OrderedMap? GetOrderedMap1(string name) => OrderedMap.TryGetValue(name, out var value) ? value.Item1 : null;
    }

    public class HeroBaseConf : Messager, IMessagerName
    {
        private Protoconf.HeroBaseConf Data_ = new Protoconf.HeroBaseConf();

        public static string Name() => Protoconf.HeroBaseConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, in LoadOptions? options = null)
        {
            var start = DateTime.Now;
            bool loaded = LoadMessageByPath<Protoconf.HeroBaseConf>(out var msg, dir, fmt, options);
            Data_ = msg;
            bool ok = loaded ? ProcessAfterLoad() : false;
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.HeroBaseConf Data() => ref Data_;

        public Base.Hero? Get1(string name) => Data_.HeroMap?.TryGetValue(name, out var val) == true ? val : null;

        public Base.Item? Get2(string name, string id) => Get1(name)?.ItemMap?.TryGetValue(id, out var val) == true ? val : null;
    }
}
