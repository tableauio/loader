// <auto-generated>
// Code generated by protoc-gen-csharp-tableau-loader. DO NOT EDIT.
// versions:
// - protoc-gen-csharp-tableau-loader v0.1.0
// - protoc                           v3.19.3
// source: hero_conf.proto
// </auto-generated>
#nullable enable
namespace Tableau
{
    public class HeroConf : Messager, IMessagerName
    {
        // OrderedMap types.
        public class Hero_Attr_OrderedMap : SortedDictionary<string, Protoconf.HeroConf.Types.Hero.Types.Attr>;

        public class Hero_OrderedMapValue(Hero_Attr_OrderedMap item1, Protoconf.HeroConf.Types.Hero item2) : Tuple<Hero_Attr_OrderedMap, Protoconf.HeroConf.Types.Hero>(item1, item2);
        public class Hero_OrderedMap : SortedDictionary<string, Hero_OrderedMapValue>;

        private readonly Hero_OrderedMap _orderedMap = [];

        private Protoconf.HeroConf _data = new();

        public static string Name() => Protoconf.HeroConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, in Load.Options? options = null)
        {
            var start = DateTime.Now;
            bool loaded = Tableau.Load.LoadMessager(out var msg, Protoconf.HeroConf.Descriptor, dir, fmt, options);
            _data = (Protoconf.HeroConf)msg;
            bool ok = loaded && ProcessAfterLoad();
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.HeroConf Data() => ref _data;

        protected override bool ProcessAfterLoad()
        {
            // OrderedMap init.
            _orderedMap.Clear();
            foreach (var (key1, value1) in _data.HeroMap)
            {
                var ordered_map1 = new Hero_Attr_OrderedMap();
                foreach (var (key2, value2) in value1.AttrMap)
                {
                    ordered_map1[key2] = value2;
                }
                _orderedMap[key1] = new Hero_OrderedMapValue(ordered_map1, value1);
            }
            return true;
        }

        public Protoconf.HeroConf.Types.Hero? Get1(string name) => _data.HeroMap?.TryGetValue(name, out var val) == true ? val : null;

        public Protoconf.HeroConf.Types.Hero.Types.Attr? Get2(string name, string title) => Get1(name)?.AttrMap?.TryGetValue(title, out var val) == true ? val : null;

        // OrderedMap accessors.
        public ref readonly Hero_OrderedMap GetOrderedMap() => ref _orderedMap;

        public Hero_Attr_OrderedMap? GetOrderedMap1(string name) => _orderedMap.TryGetValue(name, out var value) ? value.Item1 : null;
    }

    public class HeroBaseConf : Messager, IMessagerName
    {
        private Protoconf.HeroBaseConf _data = new();

        public static string Name() => Protoconf.HeroBaseConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, in Load.Options? options = null)
        {
            var start = DateTime.Now;
            bool loaded = Tableau.Load.LoadMessager(out var msg, Protoconf.HeroBaseConf.Descriptor, dir, fmt, options);
            _data = (Protoconf.HeroBaseConf)msg;
            bool ok = loaded && ProcessAfterLoad();
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.HeroBaseConf Data() => ref _data;

        public Base.Hero? Get1(string name) => _data.HeroMap?.TryGetValue(name, out var val) == true ? val : null;

        public Base.Item? Get2(string name, string id) => Get1(name)?.ItemMap?.TryGetValue(id, out var val) == true ? val : null;
    }
}
