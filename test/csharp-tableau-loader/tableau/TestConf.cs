// Code generated by protoc-gen-csharp-tableau-loader. DO NOT EDIT.
// versions:
// - protoc-gen-csharp-tableau-loader v0.1.0
// - protoc                           v3.19.3
// source: test_conf.proto
using System;
using System.Collections.Generic;
using Google.Protobuf;
using Google.Protobuf.Collections;

namespace Tableau
{
    public class ActivityConf : Messager, IMessagerName
    {
        // OrderedMap types.
        public class int32_OrderedMap : SortedDictionary<uint, int> { }

        public class protoconf_Section_OrderedMapValue : Tuple<int32_OrderedMap, Protoconf.Section?>
        {
            public protoconf_Section_OrderedMapValue(int32_OrderedMap item1, Protoconf.Section? item2) : base(item1, item2) { }
        }
        public class protoconf_Section_OrderedMap : SortedDictionary<uint, protoconf_Section_OrderedMapValue> { }

        public class Activity_Chapter_OrderedMapValue : Tuple<protoconf_Section_OrderedMap, Protoconf.ActivityConf.Types.Activity.Types.Chapter?>
        {
            public Activity_Chapter_OrderedMapValue(protoconf_Section_OrderedMap item1, Protoconf.ActivityConf.Types.Activity.Types.Chapter? item2) : base(item1, item2) { }
        }
        public class Activity_Chapter_OrderedMap : SortedDictionary<uint, Activity_Chapter_OrderedMapValue> { }

        public class Activity_OrderedMapValue : Tuple<Activity_Chapter_OrderedMap, Protoconf.ActivityConf.Types.Activity?>
        {
            public Activity_OrderedMapValue(Activity_Chapter_OrderedMap item1, Protoconf.ActivityConf.Types.Activity? item2) : base(item1, item2) { }
        }
        public class Activity_OrderedMap : SortedDictionary<ulong, Activity_OrderedMapValue> { }

        private Activity_OrderedMap OrderedMap = new Activity_OrderedMap();

        private Protoconf.ActivityConf Data_ = new Protoconf.ActivityConf();

        public static string Name() => Protoconf.ActivityConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, LoadOptions? options = null)
        {
            var start = DateTime.Now;
            bool loaded = LoadMessageByPath<Protoconf.ActivityConf>(out var msg, dir, fmt, options);
            Data_ = msg;
            bool ok = loaded ? ProcessAfterLoad() : false;
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.ActivityConf Data() => ref Data_;

        protected override bool ProcessAfterLoad()
        {
            // OrderedMap init.
            OrderedMap.Clear();
            foreach (var (key1, value1) in Data_.ActivityMap)
            {
                var ordered_map1 = new Activity_Chapter_OrderedMap();
                foreach (var (key2, value2) in value1.ChapterMap)
                {
                    var ordered_map2 = new protoconf_Section_OrderedMap();
                    foreach (var (key3, value3) in value2.SectionMap)
                    {
                        var ordered_map3 = new int32_OrderedMap();
                        foreach (var (key4, value4) in value3.SectionRankMap)
                        {
                            ordered_map3[key4] = value4;
                        }
                        ordered_map2[key3] = new protoconf_Section_OrderedMapValue(ordered_map3, value3);
                    }
                    ordered_map1[key2] = new Activity_Chapter_OrderedMapValue(ordered_map2, value2);
                }
                OrderedMap[key1] = new Activity_OrderedMapValue(ordered_map1, value1);
            }
            return true;
        }

        public Protoconf.ActivityConf.Types.Activity? Get1(ulong activityId)
        {
            if (Data_.ActivityMap.TryGetValue(activityId, out var val))
            {
                return val;
            }
            return null;
        }

        public Protoconf.ActivityConf.Types.Activity.Types.Chapter? Get2(ulong activityId, uint chapterId)
        {
            var conf = Get1(activityId);
            if (conf?.ChapterMap != null && conf.ChapterMap.TryGetValue(chapterId, out var val))
            {
                return val;
            }
            return null;
        }

        public Protoconf.Section? Get3(ulong activityId, uint chapterId, uint sectionId)
        {
            var conf = Get2(activityId, chapterId);
            if (conf?.SectionMap != null && conf.SectionMap.TryGetValue(sectionId, out var val))
            {
                return val;
            }
            return null;
        }

        public int? Get4(ulong activityId, uint chapterId, uint sectionId, uint key4)
        {
            var conf = Get3(activityId, chapterId, sectionId);
            if (conf?.SectionRankMap != null && conf.SectionRankMap.TryGetValue(key4, out var val))
            {
                return val;
            }
            return null;
        }

        // OrderedMap accessors.
        public ref readonly Activity_OrderedMap GetOrderedMap()
        {
            return ref OrderedMap;
        }

        public Activity_Chapter_OrderedMap? GetOrderedMap1(ulong activityId)
        {
            if (OrderedMap.TryGetValue(activityId, out var value))
            {
                return value.Item1;
            }
            return null;
        }

        public protoconf_Section_OrderedMap? GetOrderedMap2(ulong activityId, uint chapterId)
        {
            var conf = GetOrderedMap1(activityId);
            if (conf != null && conf.TryGetValue(chapterId, out var value))
            {
                return value.Item1;
            }
            return null;
        }

        public int32_OrderedMap? GetOrderedMap3(ulong activityId, uint chapterId, uint sectionId)
        {
            var conf = GetOrderedMap2(activityId, chapterId);
            if (conf != null && conf.TryGetValue(sectionId, out var value))
            {
                return value.Item1;
            }
            return null;
        }
    }


    public class ChapterConf : Messager, IMessagerName
    {
        private Protoconf.ChapterConf Data_ = new Protoconf.ChapterConf();

        public static string Name() => Protoconf.ChapterConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, LoadOptions? options = null)
        {
            var start = DateTime.Now;
            bool loaded = LoadMessageByPath<Protoconf.ChapterConf>(out var msg, dir, fmt, options);
            Data_ = msg;
            bool ok = loaded ? ProcessAfterLoad() : false;
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.ChapterConf Data() => ref Data_;

        public Protoconf.ChapterConf.Types.Chapter? Get1(ulong id)
        {
            if (Data_.ChapterMap.TryGetValue(id, out var val))
            {
                return val;
            }
            return null;
        }
    }

    public class ThemeConf : Messager, IMessagerName
    {
        private Protoconf.ThemeConf Data_ = new Protoconf.ThemeConf();

        public static string Name() => Protoconf.ThemeConf.Descriptor.Name;

        public override bool Load(string dir, Format fmt, LoadOptions? options = null)
        {
            var start = DateTime.Now;
            bool loaded = LoadMessageByPath<Protoconf.ThemeConf>(out var msg, dir, fmt, options);
            Data_ = msg;
            bool ok = loaded ? ProcessAfterLoad() : false;
            LoadStats.Duration = DateTime.Now - start;
            return ok;
        }

        public ref readonly Protoconf.ThemeConf Data() => ref Data_;

        public Protoconf.ThemeConf.Types.Theme? Get1(string name)
        {
            if (Data_.ThemeMap.TryGetValue(name, out var val))
            {
                return val;
            }
            return null;
        }

        public string? Get2(string name, string param)
        {
            var conf = Get1(name);
            if (conf?.ParamMap != null && conf.ParamMap.TryGetValue(param, out var val))
            {
                return val;
            }
            return null;
        }
    }
}
